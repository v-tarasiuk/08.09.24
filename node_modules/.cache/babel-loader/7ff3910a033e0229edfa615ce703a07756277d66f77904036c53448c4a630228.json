{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: {\n    tasks: [],\n    taskText: ''\n  },\n  reducers: {\n    ChangeTaskText: (state, action) => {\n      state.taskText = action.payload;\n    },\n    AddTask: state => {\n      let newTask = {\n        id: state.tasks.length + 1,\n        text: state.taskText,\n        completed: false\n      };\n      state.tasks.push(newTask);\n      state.taskText = '';\n    },\n    DeleteTask: (state, action) => {\n      const index = state.tasks.findIndex(task => task.id === action.payload);\n      if (index !== -1) {\n        state.tasks.splice(index, 1);\n      }\n    },\n    ChangeTaskState: (state, action) => {\n      const task = state.tasks.find(task => task.id === action.payload);\n      if (task) {\n        task.completed = !task.completed;\n      }\n    },\n    DeleteAll: (state, action) => {\n      state.tasks = [];\n    }\n  }\n});\nexport const {\n  ChangeTaskText,\n  AddTask,\n  DeleteTask,\n  ChangeTaskState,\n  DeleteAll\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","tasksSlice","name","initialState","tasks","taskText","reducers","ChangeTaskText","state","action","payload","AddTask","newTask","id","length","text","completed","push","DeleteTask","index","findIndex","task","splice","ChangeTaskState","find","DeleteAll","actions","reducer"],"sources":["C:/Users/1/Desktop/cbs/ToDoList/src/Redux/TodoListSlice.js"],"sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\";\n\nconst tasksSlice = createSlice({\n    name: 'tasks',\n    initialState: {\n        tasks: [\n          \n        ],\n        taskText: ''\n    },\n    reducers: {\n        ChangeTaskText: (state, action) => {\n            state.taskText = action.payload;\n        },\n        AddTask: (state) => {\n            let newTask = {\n                id: state.tasks.length + 1,\n                text: state.taskText,\n                completed: false\n            };\n            state.tasks.push(newTask);\n            state.taskText = '';\n        },\n        DeleteTask: (state, action) => {\n            const index = state.tasks.findIndex(task => task.id === action.payload);\n            if (index !== -1) {\n                state.tasks.splice(index, 1);\n            }\n        },\n        ChangeTaskState: (state, action) => {\n            const task = state.tasks.find(task => task.id === action.payload);\n            if (task) {\n                task.completed = !task.completed;\n            }\n        },\n        DeleteAll: (state, action) => {\n            state.tasks = [];\n        }\n    }\n});\n\nexport const {ChangeTaskText, AddTask, DeleteTask, ChangeTaskState, DeleteAll} = tasksSlice.actions;\nexport default tasksSlice.reducer;"],"mappings":"AAAA,SAAQA,WAAW,QAAO,kBAAkB;AAE5C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC3BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACVC,KAAK,EAAE,EAEN;IACDC,QAAQ,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACNC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACH,QAAQ,GAAGI,MAAM,CAACC,OAAO;IACnC,CAAC;IACDC,OAAO,EAAGH,KAAK,IAAK;MAChB,IAAII,OAAO,GAAG;QACVC,EAAE,EAAEL,KAAK,CAACJ,KAAK,CAACU,MAAM,GAAG,CAAC;QAC1BC,IAAI,EAAEP,KAAK,CAACH,QAAQ;QACpBW,SAAS,EAAE;MACf,CAAC;MACDR,KAAK,CAACJ,KAAK,CAACa,IAAI,CAACL,OAAO,CAAC;MACzBJ,KAAK,CAACH,QAAQ,GAAG,EAAE;IACvB,CAAC;IACDa,UAAU,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MAC3B,MAAMU,KAAK,GAAGX,KAAK,CAACJ,KAAK,CAACgB,SAAS,CAACC,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKJ,MAAM,CAACC,OAAO,CAAC;MACvE,IAAIS,KAAK,KAAK,CAAC,CAAC,EAAE;QACdX,KAAK,CAACJ,KAAK,CAACkB,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;MAChC;IACJ,CAAC;IACDI,eAAe,EAAEA,CAACf,KAAK,EAAEC,MAAM,KAAK;MAChC,MAAMY,IAAI,GAAGb,KAAK,CAACJ,KAAK,CAACoB,IAAI,CAACH,IAAI,IAAIA,IAAI,CAACR,EAAE,KAAKJ,MAAM,CAACC,OAAO,CAAC;MACjE,IAAIW,IAAI,EAAE;QACNA,IAAI,CAACL,SAAS,GAAG,CAACK,IAAI,CAACL,SAAS;MACpC;IACJ,CAAC;IACDS,SAAS,EAAEA,CAACjB,KAAK,EAAEC,MAAM,KAAK;MAC1BD,KAAK,CAACJ,KAAK,GAAG,EAAE;IACpB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACG,cAAc;EAAEI,OAAO;EAAEO,UAAU;EAAEK,eAAe;EAAEE;AAAS,CAAC,GAAGxB,UAAU,CAACyB,OAAO;AACnG,eAAezB,UAAU,CAAC0B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}